// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Intake {
  id           String       @id @default(uuid()) @db.Uuid
  createdAt    DateTime     @default(now()) @map("created_at")
  updatedAt    DateTime     @updatedAt @map("updated_at")
  consent      Boolean
  customerName String       @map("customer_name")
  phone        String
  email        String?
  address      String?
  annualIncome Int?         @map("annual_income")
  budgetTotal  Int?         @map("budget_total")
  projectType  ProjectType? @map("project_type")
  from         String?
  status       String       @default("new")
  formVersion  String       @default("v1") @map("form_version")

  @@index([status])
  @@index([createdAt])
  @@map("intakes")
}

enum ProjectType {
  new
  reform
  warehouse
}

model Simulation {
  id                           String   @id @default(uuid()) @db.Uuid
  createdAt                    DateTime @default(now()) @map("created_at")
  updatedAt                    DateTime @updatedAt @map("updated_at")
  age                          Int
  postalCode                   String   @map("postal_code")
  incomeHusband                Int      @map("income_husband")
  incomeWife                   Int      @map("income_wife")
  otherLoanAnnualRepay         Int      @map("other_loan_annual_repay")
  headMoney                    Int      @map("head_money")
  hasLand                      Boolean  @map("has_land")
  wishMonthly                  Int      @map("wish_monthly")
  termYearsSelected            Int      @map("term_years_selected")
  termYearsEffective           Int      @map("term_years_effective")
  bonusEnabled                 Boolean  @map("bonus_enabled")
  bonusPerPayment              Int      @map("bonus_per_payment")
  bonusAnnual                  Int      @map("bonus_annual")
  bonusMonthly                 Float    @map("bonus_monthly")
  wishMonthlyTotal             Float    @map("wish_monthly_total")
  householdAnnualIncome        Int      @map("household_annual_income")
  maxAnnualDebt                Float    @map("max_annual_debt")
  availableAnnualForThisLoan   Float    @map("available_annual_for_this_loan")
  availableMonthlyForThisLoan  Float    @map("available_monthly_for_this_loan")
  maxLoan                      Float    @map("max_loan")
  wishLoan                     Float    @map("wish_loan")
  ratio                        Float
  budgetForBuilding            Float    @map("budget_for_building")
  tsubo                        Float
  squareMeters                 Float    @map("square_meters")
  termMonths                   Int      @map("term_months")
  monthlyRate                  Float    @map("monthly_rate")
  maxTermByAge                 Int      @map("max_term_by_age")
  configAnnualInterestRate     Float    @map("config_annual_interest_rate")
  configMaxTermYearsCap        Int      @map("config_max_term_years_cap")
  configDtiRatio               Float    @map("config_dti_ratio")
  configUnitPricePerTsubo      Int      @map("config_unit_price_per_tsubo")

  @@index([createdAt])
  @@map("simulations")
}
